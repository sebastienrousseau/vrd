var searchIndex = JSON.parse('{\
"vrd":{"doc":"<code>Random (VRD)</code> ðŸ¦€","t":"DLLLLLLLLLLLLLLLLLLLAMMLLLLOOOOOOOOOOOOOLOLFLLLLLLLLL","n":["Random","bool","borrow","borrow_mut","bytes","char","choose","clone","clone_into","cmp","default","double","eq","float","fmt","fmt","from","hash","int","into","macros","mt","mti","new","partial_cmp","pseudo","rand","rand_bool","rand_bytes","rand_char","rand_choose","rand_double","rand_float","rand_int","rand_new","rand_pseudo","rand_range","rand_seed","rand_twist","rand_uint","random_range","random_range","range","run","seed","to_owned","to_string","try_from","try_into","twist","type_id","uint","vzip"],"q":[[0,"vrd"]],"d":["The <code>Random</code> struct is used to generate random numbers using â€¦","Returns a random bool with a probability that can be set.","","","Returns a vector of random bytes of the given length","Returns a random char within the range â€˜aâ€™..=â€˜zâ€™","Returns a random element from a slice of values","","","","Returns a default random number generator","Returns a random double.","","Returns a random float.","","Returns a formatted string representation of the <code>Random</code> â€¦","Returns the argument unchanged.","","Returns a random integer within the given range","Calls <code>U::from(self)</code>.","The <code>macros</code> module contains functions for generating macros.","The array of unsigned 32-bit integers used to generate â€¦","The current index of the array used in the generation of â€¦","Returns new random number generator","","Returns pseudo random number","Returns a random 32-bit unsigned integer.","Generate a random boolean with the provided probability â€¦","Generate a vector of random bytes with the provided length â€¦","Generate a random char within the range â€˜aâ€™..=â€˜zâ€™ â€¦","Generate a random element from a slice of values using the â€¦","Generate a random double using the provided <code>Random (VRD)</code> â€¦","Generate a random float using the provided <code>Random (VRD)</code> â€¦","Generate a random integer within the given range using the â€¦","Generate a new random number","Generate a random 32-bit unsigned integer using the â€¦","Generate a random number within the given range using the â€¦","Seed the provided <code>Random (VRD)</code> struct with the given value","Twist the state of the provided <code>Random (VRD)</code> struct","Generate a random 32-bit unsigned integer within the given â€¦","Returns a random 32-bit unsigned integer within a given â€¦","Generate a random 32-bit unsigned integer within the given â€¦","Returns a random number within a given range.","This is the main entry point for the <code>Random (VRD)</code> library.","Seeds the random number generator with a given value.","","","","","Twists the state of the random number generator.","","Returns a random unsigned integer within the given range",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1],"f":[0,[[1,2],3],[[]],[[]],[[1,4],[[6,[5]]]],[1,7],[1,8],[1,1],[[]],[[1,1],9],[[],1],[1,2],[[1,1],3],[1,10],[[1,11],12],[[1,11],12],[[]],[[1,13]],[[1,14,14],14],[[]],0,0,0,[[],1],[[1,1],[[8,[9]]]],[1,15],[1,15],0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,15,15],15],0,[[1,14,14],14],[[],[[18,[[17,[16]]]]]],[[1,15]],[[]],[[],19],[[],18],[[],18],[1],[[],20],[[1,15,15],15],[[]]],"c":[],"p":[[3,"Random"],[15,"f64"],[15,"bool"],[15,"usize"],[15,"u8"],[3,"Vec"],[15,"char"],[4,"Option"],[4,"Ordering"],[15,"f32"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[15,"i32"],[15,"u32"],[8,"Error"],[3,"Box"],[4,"Result"],[3,"String"],[3,"TypeId"]]},\
"xtask":{"doc":"","t":"F","n":["main"],"q":[[0,"xtask"]],"d":[""],"i":[0],"f":[[[],[[2,[1]]]]],"c":[],"p":[[3,"Error"],[4,"Result"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
